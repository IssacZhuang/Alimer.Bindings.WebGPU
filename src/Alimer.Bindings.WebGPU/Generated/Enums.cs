// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;

namespace Alimer.Bindings.WebGPU;

public enum WGPUAdapterType
{
	/// <unmanaged>WGPUAdapterType_DiscreteGPU</unmanaged>
	DiscreteGPU = 0,
	/// <unmanaged>WGPUAdapterType_IntegratedGPU</unmanaged>
	IntegratedGPU = 1,
	/// <unmanaged>WGPUAdapterType_CPU</unmanaged>
	CPU = 2,
	/// <unmanaged>WGPUAdapterType_Unknown</unmanaged>
	Unknown = 3,
}

public enum WGPUAddressMode
{
	/// <unmanaged>WGPUAddressMode_Repeat</unmanaged>
	Repeat = 0,
	/// <unmanaged>WGPUAddressMode_MirrorRepeat</unmanaged>
	MirrorRepeat = 1,
	/// <unmanaged>WGPUAddressMode_ClampToEdge</unmanaged>
	ClampToEdge = 2,
}

public enum WGPUBackendType
{
	/// <unmanaged>WGPUBackendType_Null</unmanaged>
	Null = 0,
	/// <unmanaged>WGPUBackendType_WebGPU</unmanaged>
	WebGPU = 1,
	/// <unmanaged>WGPUBackendType_D3D11</unmanaged>
	D3D11 = 2,
	/// <unmanaged>WGPUBackendType_D3D12</unmanaged>
	D3D12 = 3,
	/// <unmanaged>WGPUBackendType_Metal</unmanaged>
	Metal = 4,
	/// <unmanaged>WGPUBackendType_Vulkan</unmanaged>
	Vulkan = 5,
	/// <unmanaged>WGPUBackendType_OpenGL</unmanaged>
	OpenGL = 6,
	/// <unmanaged>WGPUBackendType_OpenGLES</unmanaged>
	OpenGLES = 7,
}

public enum WGPUBlendFactor
{
	/// <unmanaged>WGPUBlendFactor_Zero</unmanaged>
	Zero = 0,
	/// <unmanaged>WGPUBlendFactor_One</unmanaged>
	One = 1,
	/// <unmanaged>WGPUBlendFactor_Src</unmanaged>
	Src = 2,
	/// <unmanaged>WGPUBlendFactor_OneMinusSrc</unmanaged>
	OneMinusSrc = 3,
	/// <unmanaged>WGPUBlendFactor_SrcAlpha</unmanaged>
	SrcAlpha = 4,
	/// <unmanaged>WGPUBlendFactor_OneMinusSrcAlpha</unmanaged>
	OneMinusSrcAlpha = 5,
	/// <unmanaged>WGPUBlendFactor_Dst</unmanaged>
	Dst = 6,
	/// <unmanaged>WGPUBlendFactor_OneMinusDst</unmanaged>
	OneMinusDst = 7,
	/// <unmanaged>WGPUBlendFactor_DstAlpha</unmanaged>
	DstAlpha = 8,
	/// <unmanaged>WGPUBlendFactor_OneMinusDstAlpha</unmanaged>
	OneMinusDstAlpha = 9,
	/// <unmanaged>WGPUBlendFactor_SrcAlphaSaturated</unmanaged>
	SrcAlphaSaturated = 10,
	/// <unmanaged>WGPUBlendFactor_Constant</unmanaged>
	Constant = 11,
	/// <unmanaged>WGPUBlendFactor_OneMinusConstant</unmanaged>
	OneMinusConstant = 12,
}

public enum WGPUBlendOperation
{
	/// <unmanaged>WGPUBlendOperation_Add</unmanaged>
	Add = 0,
	/// <unmanaged>WGPUBlendOperation_Subtract</unmanaged>
	Subtract = 1,
	/// <unmanaged>WGPUBlendOperation_ReverseSubtract</unmanaged>
	ReverseSubtract = 2,
	/// <unmanaged>WGPUBlendOperation_Min</unmanaged>
	Min = 3,
	/// <unmanaged>WGPUBlendOperation_Max</unmanaged>
	Max = 4,
}

public enum WGPUBufferBindingType
{
	/// <unmanaged>WGPUBufferBindingType_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUBufferBindingType_Uniform</unmanaged>
	Uniform = 1,
	/// <unmanaged>WGPUBufferBindingType_Storage</unmanaged>
	Storage = 2,
	/// <unmanaged>WGPUBufferBindingType_ReadOnlyStorage</unmanaged>
	ReadOnlyStorage = 3,
}

public enum WGPUBufferMapAsyncStatus
{
	/// <unmanaged>WGPUBufferMapAsyncStatus_Success</unmanaged>
	Success = 0,
	/// <unmanaged>WGPUBufferMapAsyncStatus_Error</unmanaged>
	Error = 1,
	/// <unmanaged>WGPUBufferMapAsyncStatus_Unknown</unmanaged>
	Unknown = 2,
	/// <unmanaged>WGPUBufferMapAsyncStatus_DeviceLost</unmanaged>
	DeviceLost = 3,
	/// <unmanaged>WGPUBufferMapAsyncStatus_DestroyedBeforeCallback</unmanaged>
	DestroyedBeforeCallback = 4,
	/// <unmanaged>WGPUBufferMapAsyncStatus_UnmappedBeforeCallback</unmanaged>
	UnmappedBeforeCallback = 5,
}

public enum WGPUBufferMapState
{
	/// <unmanaged>WGPUBufferMapState_Unmapped</unmanaged>
	Unmapped = 0,
	/// <unmanaged>WGPUBufferMapState_Pending</unmanaged>
	Pending = 1,
	/// <unmanaged>WGPUBufferMapState_Mapped</unmanaged>
	Mapped = 2,
}

public enum WGPUCompareFunction
{
	/// <unmanaged>WGPUCompareFunction_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUCompareFunction_Never</unmanaged>
	Never = 1,
	/// <unmanaged>WGPUCompareFunction_Less</unmanaged>
	Less = 2,
	/// <unmanaged>WGPUCompareFunction_LessEqual</unmanaged>
	LessEqual = 3,
	/// <unmanaged>WGPUCompareFunction_Greater</unmanaged>
	Greater = 4,
	/// <unmanaged>WGPUCompareFunction_GreaterEqual</unmanaged>
	GreaterEqual = 5,
	/// <unmanaged>WGPUCompareFunction_Equal</unmanaged>
	Equal = 6,
	/// <unmanaged>WGPUCompareFunction_NotEqual</unmanaged>
	NotEqual = 7,
	/// <unmanaged>WGPUCompareFunction_Always</unmanaged>
	Always = 8,
}

public enum WGPUCompilationInfoRequestStatus
{
	/// <unmanaged>WGPUCompilationInfoRequestStatus_Success</unmanaged>
	Success = 0,
	/// <unmanaged>WGPUCompilationInfoRequestStatus_Error</unmanaged>
	Error = 1,
	/// <unmanaged>WGPUCompilationInfoRequestStatus_DeviceLost</unmanaged>
	DeviceLost = 2,
	/// <unmanaged>WGPUCompilationInfoRequestStatus_Unknown</unmanaged>
	Unknown = 3,
}

public enum WGPUCompilationMessageType
{
	/// <unmanaged>WGPUCompilationMessageType_Error</unmanaged>
	Error = 0,
	/// <unmanaged>WGPUCompilationMessageType_Warning</unmanaged>
	Warning = 1,
	/// <unmanaged>WGPUCompilationMessageType_Info</unmanaged>
	Info = 2,
}

public enum WGPUComputePassTimestampLocation
{
	/// <unmanaged>WGPUComputePassTimestampLocation_Beginning</unmanaged>
	Beginning = 0,
	/// <unmanaged>WGPUComputePassTimestampLocation_End</unmanaged>
	End = 1,
}

public enum WGPUCreatePipelineAsyncStatus
{
	/// <unmanaged>WGPUCreatePipelineAsyncStatus_Success</unmanaged>
	Success = 0,
	/// <unmanaged>WGPUCreatePipelineAsyncStatus_ValidationError</unmanaged>
	ValidationError = 1,
	/// <unmanaged>WGPUCreatePipelineAsyncStatus_InternalError</unmanaged>
	InternalError = 2,
	/// <unmanaged>WGPUCreatePipelineAsyncStatus_DeviceLost</unmanaged>
	DeviceLost = 3,
	/// <unmanaged>WGPUCreatePipelineAsyncStatus_DeviceDestroyed</unmanaged>
	DeviceDestroyed = 4,
	/// <unmanaged>WGPUCreatePipelineAsyncStatus_Unknown</unmanaged>
	Unknown = 5,
}

public enum WGPUCullMode
{
	/// <unmanaged>WGPUCullMode_None</unmanaged>
	None = 0,
	/// <unmanaged>WGPUCullMode_Front</unmanaged>
	Front = 1,
	/// <unmanaged>WGPUCullMode_Back</unmanaged>
	Back = 2,
}

public enum WGPUDeviceLostReason
{
	/// <unmanaged>WGPUDeviceLostReason_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUDeviceLostReason_Destroyed</unmanaged>
	Destroyed = 1,
}

public enum WGPUErrorFilter
{
	/// <unmanaged>WGPUErrorFilter_Validation</unmanaged>
	Validation = 0,
	/// <unmanaged>WGPUErrorFilter_OutOfMemory</unmanaged>
	OutOfMemory = 1,
	/// <unmanaged>WGPUErrorFilter_Internal</unmanaged>
	Internal = 2,
}

public enum WGPUErrorType
{
	/// <unmanaged>WGPUErrorType_NoError</unmanaged>
	NoError = 0,
	/// <unmanaged>WGPUErrorType_Validation</unmanaged>
	Validation = 1,
	/// <unmanaged>WGPUErrorType_OutOfMemory</unmanaged>
	OutOfMemory = 2,
	/// <unmanaged>WGPUErrorType_Internal</unmanaged>
	Internal = 3,
	/// <unmanaged>WGPUErrorType_Unknown</unmanaged>
	Unknown = 4,
	/// <unmanaged>WGPUErrorType_DeviceLost</unmanaged>
	DeviceLost = 5,
}

public enum WGPUFeatureName
{
	/// <unmanaged>WGPUFeatureName_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUFeatureName_DepthClipControl</unmanaged>
	DepthClipControl = 1,
	/// <unmanaged>WGPUFeatureName_Depth32FloatStencil8</unmanaged>
	Depth32FloatStencil8 = 2,
	/// <unmanaged>WGPUFeatureName_TimestampQuery</unmanaged>
	TimestampQuery = 3,
	/// <unmanaged>WGPUFeatureName_PipelineStatisticsQuery</unmanaged>
	PipelineStatisticsQuery = 4,
	/// <unmanaged>WGPUFeatureName_TextureCompressionBC</unmanaged>
	TextureCompressionBC = 5,
	/// <unmanaged>WGPUFeatureName_TextureCompressionETC2</unmanaged>
	TextureCompressionETC2 = 6,
	/// <unmanaged>WGPUFeatureName_TextureCompressionASTC</unmanaged>
	TextureCompressionASTC = 7,
	/// <unmanaged>WGPUFeatureName_IndirectFirstInstance</unmanaged>
	IndirectFirstInstance = 8,
	/// <unmanaged>WGPUFeatureName_ShaderF16</unmanaged>
	ShaderF16 = 9,
	/// <unmanaged>WGPUFeatureName_RG11B10UfloatRenderable</unmanaged>
	RG11B10UfloatRenderable = 10,
	/// <unmanaged>WGPUFeatureName_BGRA8UnormStorage</unmanaged>
	BGRA8UnormStorage = 11,
}

public enum WGPUFilterMode
{
	/// <unmanaged>WGPUFilterMode_Nearest</unmanaged>
	Nearest = 0,
	/// <unmanaged>WGPUFilterMode_Linear</unmanaged>
	Linear = 1,
}

public enum WGPUFrontFace
{
	/// <unmanaged>WGPUFrontFace_CCW</unmanaged>
	CCW = 0,
	/// <unmanaged>WGPUFrontFace_CW</unmanaged>
	CW = 1,
}

public enum WGPUIndexFormat
{
	/// <unmanaged>WGPUIndexFormat_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUIndexFormat_Uint16</unmanaged>
	Uint16 = 1,
	/// <unmanaged>WGPUIndexFormat_Uint32</unmanaged>
	Uint32 = 2,
}

public enum WGPULoadOp
{
	/// <unmanaged>WGPULoadOp_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPULoadOp_Clear</unmanaged>
	Clear = 1,
	/// <unmanaged>WGPULoadOp_Load</unmanaged>
	Load = 2,
}

public enum WGPUMipmapFilterMode
{
	/// <unmanaged>WGPUMipmapFilterMode_Nearest</unmanaged>
	Nearest = 0,
	/// <unmanaged>WGPUMipmapFilterMode_Linear</unmanaged>
	Linear = 1,
}

public enum WGPUPipelineStatisticName
{
	/// <unmanaged>WGPUPipelineStatisticName_VertexShaderInvocations</unmanaged>
	VertexShaderInvocations = 0,
	/// <unmanaged>WGPUPipelineStatisticName_ClipperInvocations</unmanaged>
	ClipperInvocations = 1,
	/// <unmanaged>WGPUPipelineStatisticName_ClipperPrimitivesOut</unmanaged>
	ClipperPrimitivesOut = 2,
	/// <unmanaged>WGPUPipelineStatisticName_FragmentShaderInvocations</unmanaged>
	FragmentShaderInvocations = 3,
	/// <unmanaged>WGPUPipelineStatisticName_ComputeShaderInvocations</unmanaged>
	ComputeShaderInvocations = 4,
}

public enum WGPUPowerPreference
{
	/// <unmanaged>WGPUPowerPreference_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUPowerPreference_LowPower</unmanaged>
	LowPower = 1,
	/// <unmanaged>WGPUPowerPreference_HighPerformance</unmanaged>
	HighPerformance = 2,
}

public enum WGPUPresentMode
{
	/// <unmanaged>WGPUPresentMode_Immediate</unmanaged>
	Immediate = 0,
	/// <unmanaged>WGPUPresentMode_Mailbox</unmanaged>
	Mailbox = 1,
	/// <unmanaged>WGPUPresentMode_Fifo</unmanaged>
	Fifo = 2,
}

public enum WGPUPrimitiveTopology
{
	/// <unmanaged>WGPUPrimitiveTopology_PointList</unmanaged>
	PointList = 0,
	/// <unmanaged>WGPUPrimitiveTopology_LineList</unmanaged>
	LineList = 1,
	/// <unmanaged>WGPUPrimitiveTopology_LineStrip</unmanaged>
	LineStrip = 2,
	/// <unmanaged>WGPUPrimitiveTopology_TriangleList</unmanaged>
	TriangleList = 3,
	/// <unmanaged>WGPUPrimitiveTopology_TriangleStrip</unmanaged>
	TriangleStrip = 4,
}

public enum WGPUQueryType
{
	/// <unmanaged>WGPUQueryType_Occlusion</unmanaged>
	Occlusion = 0,
	/// <unmanaged>WGPUQueryType_PipelineStatistics</unmanaged>
	PipelineStatistics = 1,
	/// <unmanaged>WGPUQueryType_Timestamp</unmanaged>
	Timestamp = 2,
}

public enum WGPUQueueWorkDoneStatus
{
	/// <unmanaged>WGPUQueueWorkDoneStatus_Success</unmanaged>
	Success = 0,
	/// <unmanaged>WGPUQueueWorkDoneStatus_Error</unmanaged>
	Error = 1,
	/// <unmanaged>WGPUQueueWorkDoneStatus_Unknown</unmanaged>
	Unknown = 2,
	/// <unmanaged>WGPUQueueWorkDoneStatus_DeviceLost</unmanaged>
	DeviceLost = 3,
}

public enum WGPURenderPassTimestampLocation
{
	/// <unmanaged>WGPURenderPassTimestampLocation_Beginning</unmanaged>
	Beginning = 0,
	/// <unmanaged>WGPURenderPassTimestampLocation_End</unmanaged>
	End = 1,
}

public enum WGPURequestAdapterStatus
{
	/// <unmanaged>WGPURequestAdapterStatus_Success</unmanaged>
	Success = 0,
	/// <unmanaged>WGPURequestAdapterStatus_Unavailable</unmanaged>
	Unavailable = 1,
	/// <unmanaged>WGPURequestAdapterStatus_Error</unmanaged>
	Error = 2,
	/// <unmanaged>WGPURequestAdapterStatus_Unknown</unmanaged>
	Unknown = 3,
}

public enum WGPURequestDeviceStatus
{
	/// <unmanaged>WGPURequestDeviceStatus_Success</unmanaged>
	Success = 0,
	/// <unmanaged>WGPURequestDeviceStatus_Error</unmanaged>
	Error = 1,
	/// <unmanaged>WGPURequestDeviceStatus_Unknown</unmanaged>
	Unknown = 2,
}

public enum WGPUSType
{
	/// <unmanaged>WGPUSType_Invalid</unmanaged>
	Invalid = 0,
	/// <unmanaged>WGPUSType_SurfaceDescriptorFromMetalLayer</unmanaged>
	SurfaceDescriptorFromMetalLayer = 1,
	/// <unmanaged>WGPUSType_SurfaceDescriptorFromWindowsHWND</unmanaged>
	SurfaceDescriptorFromWindowsHWND = 2,
	/// <unmanaged>WGPUSType_SurfaceDescriptorFromXlibWindow</unmanaged>
	SurfaceDescriptorFromXlibWindow = 3,
	/// <unmanaged>WGPUSType_SurfaceDescriptorFromCanvasHTMLSelector</unmanaged>
	SurfaceDescriptorFromCanvasHTMLSelector = 4,
	/// <unmanaged>WGPUSType_ShaderModuleSPIRVDescriptor</unmanaged>
	ShaderModuleSPIRVDescriptor = 5,
	/// <unmanaged>WGPUSType_ShaderModuleWGSLDescriptor</unmanaged>
	ShaderModuleWGSLDescriptor = 6,
	/// <unmanaged>WGPUSType_PrimitiveDepthClipControl</unmanaged>
	PrimitiveDepthClipControl = 7,
	/// <unmanaged>WGPUSType_SurfaceDescriptorFromWaylandSurface</unmanaged>
	SurfaceDescriptorFromWaylandSurface = 8,
	/// <unmanaged>WGPUSType_SurfaceDescriptorFromAndroidNativeWindow</unmanaged>
	SurfaceDescriptorFromAndroidNativeWindow = 9,
	/// <unmanaged>WGPUSType_SurfaceDescriptorFromXcbWindow</unmanaged>
	SurfaceDescriptorFromXcbWindow = 10,
	/// <unmanaged>WGPUSType_RenderPassDescriptorMaxDrawCount</unmanaged>
	RenderPassDescriptorMaxDrawCount = 15,
}

public enum WGPUSamplerBindingType
{
	/// <unmanaged>WGPUSamplerBindingType_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUSamplerBindingType_Filtering</unmanaged>
	Filtering = 1,
	/// <unmanaged>WGPUSamplerBindingType_NonFiltering</unmanaged>
	NonFiltering = 2,
	/// <unmanaged>WGPUSamplerBindingType_Comparison</unmanaged>
	Comparison = 3,
}

public enum WGPUStencilOperation
{
	/// <unmanaged>WGPUStencilOperation_Keep</unmanaged>
	Keep = 0,
	/// <unmanaged>WGPUStencilOperation_Zero</unmanaged>
	Zero = 1,
	/// <unmanaged>WGPUStencilOperation_Replace</unmanaged>
	Replace = 2,
	/// <unmanaged>WGPUStencilOperation_Invert</unmanaged>
	Invert = 3,
	/// <unmanaged>WGPUStencilOperation_IncrementClamp</unmanaged>
	IncrementClamp = 4,
	/// <unmanaged>WGPUStencilOperation_DecrementClamp</unmanaged>
	DecrementClamp = 5,
	/// <unmanaged>WGPUStencilOperation_IncrementWrap</unmanaged>
	IncrementWrap = 6,
	/// <unmanaged>WGPUStencilOperation_DecrementWrap</unmanaged>
	DecrementWrap = 7,
}

public enum WGPUStorageTextureAccess
{
	/// <unmanaged>WGPUStorageTextureAccess_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUStorageTextureAccess_WriteOnly</unmanaged>
	WriteOnly = 1,
}

public enum WGPUStoreOp
{
	/// <unmanaged>WGPUStoreOp_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUStoreOp_Store</unmanaged>
	Store = 1,
	/// <unmanaged>WGPUStoreOp_Discard</unmanaged>
	Discard = 2,
}

public enum WGPUTextureAspect
{
	/// <unmanaged>WGPUTextureAspect_All</unmanaged>
	All = 0,
	/// <unmanaged>WGPUTextureAspect_StencilOnly</unmanaged>
	StencilOnly = 1,
	/// <unmanaged>WGPUTextureAspect_DepthOnly</unmanaged>
	DepthOnly = 2,
}

public enum WGPUTextureComponentType
{
	/// <unmanaged>WGPUTextureComponentType_Float</unmanaged>
	Float = 0,
	/// <unmanaged>WGPUTextureComponentType_Sint</unmanaged>
	Sint = 1,
	/// <unmanaged>WGPUTextureComponentType_Uint</unmanaged>
	Uint = 2,
	/// <unmanaged>WGPUTextureComponentType_DepthComparison</unmanaged>
	DepthComparison = 3,
}

public enum WGPUTextureDimension
{
	/// <unmanaged>WGPUTextureDimension_1D</unmanaged>
	_1D = 0,
	/// <unmanaged>WGPUTextureDimension_2D</unmanaged>
	_2D = 1,
	/// <unmanaged>WGPUTextureDimension_3D</unmanaged>
	_3D = 2,
}

public enum WGPUTextureFormat
{
	/// <unmanaged>WGPUTextureFormat_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUTextureFormat_R8Unorm</unmanaged>
	R8Unorm = 1,
	/// <unmanaged>WGPUTextureFormat_R8Snorm</unmanaged>
	R8Snorm = 2,
	/// <unmanaged>WGPUTextureFormat_R8Uint</unmanaged>
	R8Uint = 3,
	/// <unmanaged>WGPUTextureFormat_R8Sint</unmanaged>
	R8Sint = 4,
	/// <unmanaged>WGPUTextureFormat_R16Uint</unmanaged>
	R16Uint = 5,
	/// <unmanaged>WGPUTextureFormat_R16Sint</unmanaged>
	R16Sint = 6,
	/// <unmanaged>WGPUTextureFormat_R16Float</unmanaged>
	R16Float = 7,
	/// <unmanaged>WGPUTextureFormat_RG8Unorm</unmanaged>
	RG8Unorm = 8,
	/// <unmanaged>WGPUTextureFormat_RG8Snorm</unmanaged>
	RG8Snorm = 9,
	/// <unmanaged>WGPUTextureFormat_RG8Uint</unmanaged>
	RG8Uint = 10,
	/// <unmanaged>WGPUTextureFormat_RG8Sint</unmanaged>
	RG8Sint = 11,
	/// <unmanaged>WGPUTextureFormat_R32Float</unmanaged>
	R32Float = 12,
	/// <unmanaged>WGPUTextureFormat_R32Uint</unmanaged>
	R32Uint = 13,
	/// <unmanaged>WGPUTextureFormat_R32Sint</unmanaged>
	R32Sint = 14,
	/// <unmanaged>WGPUTextureFormat_RG16Uint</unmanaged>
	RG16Uint = 15,
	/// <unmanaged>WGPUTextureFormat_RG16Sint</unmanaged>
	RG16Sint = 16,
	/// <unmanaged>WGPUTextureFormat_RG16Float</unmanaged>
	RG16Float = 17,
	/// <unmanaged>WGPUTextureFormat_RGBA8Unorm</unmanaged>
	RGBA8Unorm = 18,
	/// <unmanaged>WGPUTextureFormat_RGBA8UnormSrgb</unmanaged>
	RGBA8UnormSrgb = 19,
	/// <unmanaged>WGPUTextureFormat_RGBA8Snorm</unmanaged>
	RGBA8Snorm = 20,
	/// <unmanaged>WGPUTextureFormat_RGBA8Uint</unmanaged>
	RGBA8Uint = 21,
	/// <unmanaged>WGPUTextureFormat_RGBA8Sint</unmanaged>
	RGBA8Sint = 22,
	/// <unmanaged>WGPUTextureFormat_BGRA8Unorm</unmanaged>
	BGRA8Unorm = 23,
	/// <unmanaged>WGPUTextureFormat_BGRA8UnormSrgb</unmanaged>
	BGRA8UnormSrgb = 24,
	/// <unmanaged>WGPUTextureFormat_RGB10A2Unorm</unmanaged>
	RGB10A2Unorm = 25,
	/// <unmanaged>WGPUTextureFormat_RG11B10Ufloat</unmanaged>
	RG11B10Ufloat = 26,
	/// <unmanaged>WGPUTextureFormat_RGB9E5Ufloat</unmanaged>
	RGB9E5Ufloat = 27,
	/// <unmanaged>WGPUTextureFormat_RG32Float</unmanaged>
	RG32Float = 28,
	/// <unmanaged>WGPUTextureFormat_RG32Uint</unmanaged>
	RG32Uint = 29,
	/// <unmanaged>WGPUTextureFormat_RG32Sint</unmanaged>
	RG32Sint = 30,
	/// <unmanaged>WGPUTextureFormat_RGBA16Uint</unmanaged>
	RGBA16Uint = 31,
	/// <unmanaged>WGPUTextureFormat_RGBA16Sint</unmanaged>
	RGBA16Sint = 32,
	/// <unmanaged>WGPUTextureFormat_RGBA16Float</unmanaged>
	RGBA16Float = 33,
	/// <unmanaged>WGPUTextureFormat_RGBA32Float</unmanaged>
	RGBA32Float = 34,
	/// <unmanaged>WGPUTextureFormat_RGBA32Uint</unmanaged>
	RGBA32Uint = 35,
	/// <unmanaged>WGPUTextureFormat_RGBA32Sint</unmanaged>
	RGBA32Sint = 36,
	/// <unmanaged>WGPUTextureFormat_Stencil8</unmanaged>
	Stencil8 = 37,
	/// <unmanaged>WGPUTextureFormat_Depth16Unorm</unmanaged>
	Depth16Unorm = 38,
	/// <unmanaged>WGPUTextureFormat_Depth24Plus</unmanaged>
	Depth24Plus = 39,
	/// <unmanaged>WGPUTextureFormat_Depth24PlusStencil8</unmanaged>
	Depth24PlusStencil8 = 40,
	/// <unmanaged>WGPUTextureFormat_Depth32Float</unmanaged>
	Depth32Float = 41,
	/// <unmanaged>WGPUTextureFormat_Depth32FloatStencil8</unmanaged>
	Depth32FloatStencil8 = 42,
	/// <unmanaged>WGPUTextureFormat_BC1RGBAUnorm</unmanaged>
	BC1RGBAUnorm = 43,
	/// <unmanaged>WGPUTextureFormat_BC1RGBAUnormSrgb</unmanaged>
	BC1RGBAUnormSrgb = 44,
	/// <unmanaged>WGPUTextureFormat_BC2RGBAUnorm</unmanaged>
	BC2RGBAUnorm = 45,
	/// <unmanaged>WGPUTextureFormat_BC2RGBAUnormSrgb</unmanaged>
	BC2RGBAUnormSrgb = 46,
	/// <unmanaged>WGPUTextureFormat_BC3RGBAUnorm</unmanaged>
	BC3RGBAUnorm = 47,
	/// <unmanaged>WGPUTextureFormat_BC3RGBAUnormSrgb</unmanaged>
	BC3RGBAUnormSrgb = 48,
	/// <unmanaged>WGPUTextureFormat_BC4RUnorm</unmanaged>
	BC4RUnorm = 49,
	/// <unmanaged>WGPUTextureFormat_BC4RSnorm</unmanaged>
	BC4RSnorm = 50,
	/// <unmanaged>WGPUTextureFormat_BC5RGUnorm</unmanaged>
	BC5RGUnorm = 51,
	/// <unmanaged>WGPUTextureFormat_BC5RGSnorm</unmanaged>
	BC5RGSnorm = 52,
	/// <unmanaged>WGPUTextureFormat_BC6HRGBUfloat</unmanaged>
	BC6HRGBUfloat = 53,
	/// <unmanaged>WGPUTextureFormat_BC6HRGBFloat</unmanaged>
	BC6HRGBFloat = 54,
	/// <unmanaged>WGPUTextureFormat_BC7RGBAUnorm</unmanaged>
	BC7RGBAUnorm = 55,
	/// <unmanaged>WGPUTextureFormat_BC7RGBAUnormSrgb</unmanaged>
	BC7RGBAUnormSrgb = 56,
	/// <unmanaged>WGPUTextureFormat_ETC2RGB8Unorm</unmanaged>
	ETC2RGB8Unorm = 57,
	/// <unmanaged>WGPUTextureFormat_ETC2RGB8UnormSrgb</unmanaged>
	ETC2RGB8UnormSrgb = 58,
	/// <unmanaged>WGPUTextureFormat_ETC2RGB8A1Unorm</unmanaged>
	ETC2RGB8A1Unorm = 59,
	/// <unmanaged>WGPUTextureFormat_ETC2RGB8A1UnormSrgb</unmanaged>
	ETC2RGB8A1UnormSrgb = 60,
	/// <unmanaged>WGPUTextureFormat_ETC2RGBA8Unorm</unmanaged>
	ETC2RGBA8Unorm = 61,
	/// <unmanaged>WGPUTextureFormat_ETC2RGBA8UnormSrgb</unmanaged>
	ETC2RGBA8UnormSrgb = 62,
	/// <unmanaged>WGPUTextureFormat_EACR11Unorm</unmanaged>
	EACR11Unorm = 63,
	/// <unmanaged>WGPUTextureFormat_EACR11Snorm</unmanaged>
	EACR11Snorm = 64,
	/// <unmanaged>WGPUTextureFormat_EACRG11Unorm</unmanaged>
	EACRG11Unorm = 65,
	/// <unmanaged>WGPUTextureFormat_EACRG11Snorm</unmanaged>
	EACRG11Snorm = 66,
	/// <unmanaged>WGPUTextureFormat_ASTC4x4Unorm</unmanaged>
	ASTC4x4Unorm = 67,
	/// <unmanaged>WGPUTextureFormat_ASTC4x4UnormSrgb</unmanaged>
	ASTC4x4UnormSrgb = 68,
	/// <unmanaged>WGPUTextureFormat_ASTC5x4Unorm</unmanaged>
	ASTC5x4Unorm = 69,
	/// <unmanaged>WGPUTextureFormat_ASTC5x4UnormSrgb</unmanaged>
	ASTC5x4UnormSrgb = 70,
	/// <unmanaged>WGPUTextureFormat_ASTC5x5Unorm</unmanaged>
	ASTC5x5Unorm = 71,
	/// <unmanaged>WGPUTextureFormat_ASTC5x5UnormSrgb</unmanaged>
	ASTC5x5UnormSrgb = 72,
	/// <unmanaged>WGPUTextureFormat_ASTC6x5Unorm</unmanaged>
	ASTC6x5Unorm = 73,
	/// <unmanaged>WGPUTextureFormat_ASTC6x5UnormSrgb</unmanaged>
	ASTC6x5UnormSrgb = 74,
	/// <unmanaged>WGPUTextureFormat_ASTC6x6Unorm</unmanaged>
	ASTC6x6Unorm = 75,
	/// <unmanaged>WGPUTextureFormat_ASTC6x6UnormSrgb</unmanaged>
	ASTC6x6UnormSrgb = 76,
	/// <unmanaged>WGPUTextureFormat_ASTC8x5Unorm</unmanaged>
	ASTC8x5Unorm = 77,
	/// <unmanaged>WGPUTextureFormat_ASTC8x5UnormSrgb</unmanaged>
	ASTC8x5UnormSrgb = 78,
	/// <unmanaged>WGPUTextureFormat_ASTC8x6Unorm</unmanaged>
	ASTC8x6Unorm = 79,
	/// <unmanaged>WGPUTextureFormat_ASTC8x6UnormSrgb</unmanaged>
	ASTC8x6UnormSrgb = 80,
	/// <unmanaged>WGPUTextureFormat_ASTC8x8Unorm</unmanaged>
	ASTC8x8Unorm = 81,
	/// <unmanaged>WGPUTextureFormat_ASTC8x8UnormSrgb</unmanaged>
	ASTC8x8UnormSrgb = 82,
	/// <unmanaged>WGPUTextureFormat_ASTC10x5Unorm</unmanaged>
	ASTC10x5Unorm = 83,
	/// <unmanaged>WGPUTextureFormat_ASTC10x5UnormSrgb</unmanaged>
	ASTC10x5UnormSrgb = 84,
	/// <unmanaged>WGPUTextureFormat_ASTC10x6Unorm</unmanaged>
	ASTC10x6Unorm = 85,
	/// <unmanaged>WGPUTextureFormat_ASTC10x6UnormSrgb</unmanaged>
	ASTC10x6UnormSrgb = 86,
	/// <unmanaged>WGPUTextureFormat_ASTC10x8Unorm</unmanaged>
	ASTC10x8Unorm = 87,
	/// <unmanaged>WGPUTextureFormat_ASTC10x8UnormSrgb</unmanaged>
	ASTC10x8UnormSrgb = 88,
	/// <unmanaged>WGPUTextureFormat_ASTC10x10Unorm</unmanaged>
	ASTC10x10Unorm = 89,
	/// <unmanaged>WGPUTextureFormat_ASTC10x10UnormSrgb</unmanaged>
	ASTC10x10UnormSrgb = 90,
	/// <unmanaged>WGPUTextureFormat_ASTC12x10Unorm</unmanaged>
	ASTC12x10Unorm = 91,
	/// <unmanaged>WGPUTextureFormat_ASTC12x10UnormSrgb</unmanaged>
	ASTC12x10UnormSrgb = 92,
	/// <unmanaged>WGPUTextureFormat_ASTC12x12Unorm</unmanaged>
	ASTC12x12Unorm = 93,
	/// <unmanaged>WGPUTextureFormat_ASTC12x12UnormSrgb</unmanaged>
	ASTC12x12UnormSrgb = 94,
}

public enum WGPUTextureSampleType
{
	/// <unmanaged>WGPUTextureSampleType_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUTextureSampleType_Float</unmanaged>
	Float = 1,
	/// <unmanaged>WGPUTextureSampleType_UnfilterableFloat</unmanaged>
	UnfilterableFloat = 2,
	/// <unmanaged>WGPUTextureSampleType_Depth</unmanaged>
	Depth = 3,
	/// <unmanaged>WGPUTextureSampleType_Sint</unmanaged>
	Sint = 4,
	/// <unmanaged>WGPUTextureSampleType_Uint</unmanaged>
	Uint = 5,
}

public enum WGPUTextureViewDimension
{
	/// <unmanaged>WGPUTextureViewDimension_Undefined</unmanaged>
	Undefined = 0,
    /// <unmanaged>WGPUTextureViewDimension_1D</unmanaged>
    _1D = 0x00000001,
	/// <unmanaged>WGPUTextureViewDimension_2D</unmanaged>
	_2D = 2,
	/// <unmanaged>WGPUTextureViewDimension_2DArray</unmanaged>
	_2DArray = 3,
	/// <unmanaged>WGPUTextureViewDimension_Cube</unmanaged>
	Cube = 4,
	/// <unmanaged>WGPUTextureViewDimension_CubeArray</unmanaged>
	CubeArray = 5,
	/// <unmanaged>WGPUTextureViewDimension_3D</unmanaged>
	_3D = 6,
}

public enum WGPUVertexFormat
{
	/// <unmanaged>WGPUVertexFormat_Undefined</unmanaged>
	Undefined = 0,
	/// <unmanaged>WGPUVertexFormat_Uint8x2</unmanaged>
	Uint8x2 = 1,
	/// <unmanaged>WGPUVertexFormat_Uint8x4</unmanaged>
	Uint8x4 = 2,
	/// <unmanaged>WGPUVertexFormat_Sint8x2</unmanaged>
	Sint8x2 = 3,
	/// <unmanaged>WGPUVertexFormat_Sint8x4</unmanaged>
	Sint8x4 = 4,
	/// <unmanaged>WGPUVertexFormat_Unorm8x2</unmanaged>
	Unorm8x2 = 5,
	/// <unmanaged>WGPUVertexFormat_Unorm8x4</unmanaged>
	Unorm8x4 = 6,
	/// <unmanaged>WGPUVertexFormat_Snorm8x2</unmanaged>
	Snorm8x2 = 7,
	/// <unmanaged>WGPUVertexFormat_Snorm8x4</unmanaged>
	Snorm8x4 = 8,
	/// <unmanaged>WGPUVertexFormat_Uint16x2</unmanaged>
	Uint16x2 = 9,
	/// <unmanaged>WGPUVertexFormat_Uint16x4</unmanaged>
	Uint16x4 = 10,
	/// <unmanaged>WGPUVertexFormat_Sint16x2</unmanaged>
	Sint16x2 = 11,
	/// <unmanaged>WGPUVertexFormat_Sint16x4</unmanaged>
	Sint16x4 = 12,
	/// <unmanaged>WGPUVertexFormat_Unorm16x2</unmanaged>
	Unorm16x2 = 13,
	/// <unmanaged>WGPUVertexFormat_Unorm16x4</unmanaged>
	Unorm16x4 = 14,
	/// <unmanaged>WGPUVertexFormat_Snorm16x2</unmanaged>
	Snorm16x2 = 15,
	/// <unmanaged>WGPUVertexFormat_Snorm16x4</unmanaged>
	Snorm16x4 = 16,
	/// <unmanaged>WGPUVertexFormat_Float16x2</unmanaged>
	Float16x2 = 17,
	/// <unmanaged>WGPUVertexFormat_Float16x4</unmanaged>
	Float16x4 = 18,
	/// <unmanaged>WGPUVertexFormat_Float32</unmanaged>
	Float32 = 19,
	/// <unmanaged>WGPUVertexFormat_Float32x2</unmanaged>
	Float32x2 = 20,
	/// <unmanaged>WGPUVertexFormat_Float32x3</unmanaged>
	Float32x3 = 21,
	/// <unmanaged>WGPUVertexFormat_Float32x4</unmanaged>
	Float32x4 = 22,
	/// <unmanaged>WGPUVertexFormat_Uint32</unmanaged>
	Uint32 = 23,
	/// <unmanaged>WGPUVertexFormat_Uint32x2</unmanaged>
	Uint32x2 = 24,
	/// <unmanaged>WGPUVertexFormat_Uint32x3</unmanaged>
	Uint32x3 = 25,
	/// <unmanaged>WGPUVertexFormat_Uint32x4</unmanaged>
	Uint32x4 = 26,
	/// <unmanaged>WGPUVertexFormat_Sint32</unmanaged>
	Sint32 = 27,
	/// <unmanaged>WGPUVertexFormat_Sint32x2</unmanaged>
	Sint32x2 = 28,
	/// <unmanaged>WGPUVertexFormat_Sint32x3</unmanaged>
	Sint32x3 = 29,
	/// <unmanaged>WGPUVertexFormat_Sint32x4</unmanaged>
	Sint32x4 = 30,
}

public enum WGPUVertexStepMode
{
	/// <unmanaged>WGPUVertexStepMode_Vertex</unmanaged>
	Vertex = 0,
	/// <unmanaged>WGPUVertexStepMode_Instance</unmanaged>
	Instance = 1,
	/// <unmanaged>WGPUVertexStepMode_VertexBufferNotUsed</unmanaged>
	VertexBufferNotUsed = 2,
}

public enum WGPUBufferUsage
{
	/// <unmanaged>WGPUBufferUsage_None</unmanaged>
	None = 0,
	/// <unmanaged>WGPUBufferUsage_MapRead</unmanaged>
	MapRead = 1,
	/// <unmanaged>WGPUBufferUsage_MapWrite</unmanaged>
	MapWrite = 2,
	/// <unmanaged>WGPUBufferUsage_CopySrc</unmanaged>
	CopySrc = 4,
	/// <unmanaged>WGPUBufferUsage_CopyDst</unmanaged>
	CopyDst = 8,
	/// <unmanaged>WGPUBufferUsage_Index</unmanaged>
	Index = 16,
	/// <unmanaged>WGPUBufferUsage_Vertex</unmanaged>
	Vertex = 32,
	/// <unmanaged>WGPUBufferUsage_Uniform</unmanaged>
	Uniform = 64,
	/// <unmanaged>WGPUBufferUsage_Storage</unmanaged>
	Storage = 128,
	/// <unmanaged>WGPUBufferUsage_Indirect</unmanaged>
	Indirect = 256,
	/// <unmanaged>WGPUBufferUsage_QueryResolve</unmanaged>
	QueryResolve = 512,
}

[Flags]
public enum WGPUColorWriteMask
{
	None = 0,
	/// <unmanaged>WGPUColorWriteMask_Red</unmanaged>
	Red = 1,
	/// <unmanaged>WGPUColorWriteMask_Green</unmanaged>
	Green = 2,
	/// <unmanaged>WGPUColorWriteMask_Blue</unmanaged>
	Blue = 4,
	/// <unmanaged>WGPUColorWriteMask_Alpha</unmanaged>
	Alpha = 8,
	/// <unmanaged>WGPUColorWriteMask_All</unmanaged>
	All = 15,
}

public enum WGPUMapMode
{
	/// <unmanaged>WGPUMapMode_None</unmanaged>
	None = 0,
	/// <unmanaged>WGPUMapMode_Read</unmanaged>
	Read = 1,
	/// <unmanaged>WGPUMapMode_Write</unmanaged>
	Write = 2,
}

[Flags]
public enum WGPUShaderStage
{
	None = 0,
	/// <unmanaged>WGPUShaderStage_Vertex</unmanaged>
	Vertex = 1,
	/// <unmanaged>WGPUShaderStage_Fragment</unmanaged>
	Fragment = 2,
	/// <unmanaged>WGPUShaderStage_Compute</unmanaged>
	Compute = 4,
}

[Flags]
public enum WGPUTextureUsage
{
	None = 0,
	/// <unmanaged>WGPUTextureUsage_CopySrc</unmanaged>
	CopySrc = 1,
	/// <unmanaged>WGPUTextureUsage_CopyDst</unmanaged>
	CopyDst = 2,
	/// <unmanaged>WGPUTextureUsage_TextureBinding</unmanaged>
	TextureBinding = 4,
	/// <unmanaged>WGPUTextureUsage_StorageBinding</unmanaged>
	StorageBinding = 8,
	/// <unmanaged>WGPUTextureUsage_RenderAttachment</unmanaged>
	RenderAttachment = 16,
}

[Flags]
public enum WGPUFlags
{
	None = 0,
}

[Flags]
public enum WGPUBufferUsageFlags
{
	None = 0,
}

[Flags]
public enum WGPUColorWriteMaskFlags
{
	None = 0,
}

[Flags]
public enum WGPUMapModeFlags
{
	None = 0,
}

[Flags]
public enum WGPUShaderStageFlags
{
	None = 0,
}

[Flags]
public enum WGPUTextureUsageFlags
{
	None = 0,
}

